import telebot
import os
import subprocess
import psutil
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ===
TOKEN = '7248122948:AAGZkQ5mK69HibnJfStldnd9FzsAgCk_ffA'
ADMIN_ID = 877365085   # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤—ñ–π Telegram ID
bot = telebot.TeleBot(TOKEN)

def is_admin(message):
    return message.chat.id == ADMIN_ID

def main_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        KeyboardButton("üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç"),
        KeyboardButton("‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ü–ö"),
        KeyboardButton("üîÑ –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏"),
        KeyboardButton("‚ö†Ô∏è –í–∏–º–∫–Ω—É—Ç–∏"),
        KeyboardButton("üìÇ –í—ñ–¥–∫—Ä–∏—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É"),
        KeyboardButton("‚å®Ô∏è –ù–∞–ø–∏—Å–∞—Ç–∏ —Ç–µ–∫—Å—Ç"),
        KeyboardButton("üñ± –ù–∞—Ç–∏—Å–Ω—É—Ç–∏ –∫–ª–∞–≤—ñ—à—É")
    ]
    markup.add(*buttons)
    return markup

@bot.message_handler(commands=['start'])
def start(message):
    if is_admin(message):
        bot.send_message(message.chat.id, "üíª –ë–æ—Ç –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ü–ö –∞–∫—Ç–∏–≤–Ω–∏–π!", reply_markup=main_menu())
    else:
        bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É!")

@bot.message_handler(func=lambda message: message.text == "üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç")
def screenshot(message):
    if is_admin(message):
        path = 'screenshot.png'
        pyautogui.screenshot().save(path)
        with open(path, 'rb') as photo:
            bot.send_photo(message.chat.id, photo)
        os.remove(path)

@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –í–∏–º–∫–Ω—É—Ç–∏")
def shutdown(message):
    if is_admin(message):
        bot.send_message(message.chat.id, "‚ö†Ô∏è –í–∏–º–∏–∫–∞—é –∫–æ–º–ø‚Äô—é—Ç–µ—Ä...")
        os.system('shutdown /s /t 5')

@bot.message_handler(func=lambda message: message.text == "üîÑ –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏")
def reboot(message):
    if is_admin(message):
        bot.send_message(message.chat.id, "üîÑ –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—é –∫–æ–º–ø‚Äô—é—Ç–µ—Ä...")
        os.system('shutdown /r /t 5')

@bot.message_handler(func=lambda message: message.text == "‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ü–ö")
def system_info(message):
    if is_admin(message):
        cpu = psutil.cpu_percent()
        ram = psutil.virtual_memory().percent
        battery = psutil.sensors_battery()
        battery_percent = battery.percent if battery else 'N/A'
        bot.send_message(message.chat.id, f"üíª CPU: {cpu}%\nüñ• RAM: {ram}%\nüîã Battery: {battery_percent}%")

@bot.message_handler(func=lambda message: message.text == "üìÇ –í—ñ–¥–∫—Ä–∏—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É")
def request_program(message):
    if is_admin(message):
        bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –ø—Ä–æ–≥—Ä–∞–º–∏ –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è:")
        bot.register_next_step_handler(message, open_program)

def open_program(message):
    if is_admin(message):
        try:
            subprocess.Popen(message.text, shell=True)
            bot.send_message(message.chat.id, f'‚úÖ –í—ñ–¥–∫—Ä–∏—Ç–æ: {message.text}')
        except Exception as e:
            bot.send_message(message.chat.id, f'‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)}')

@bot.message_handler(func=lambda message: message.text == "‚å®Ô∏è –ù–∞–ø–∏—Å–∞—Ç–∏ —Ç–µ–∫—Å—Ç")
def request_text(message):
    if is_admin(message):
        bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –¥—Ä—É–∫—É:")
        bot.register_next_step_handler(message, write_text)

def write_text(message):
    if is_admin(message):
        pyautogui.write(message.text)
        bot.send_message(message.chat.id, "üìù –ù–∞–¥—Ä—É–∫–æ–≤–∞–Ω–æ: " + message.text)

@bot.message_handler(func=lambda message: message.text == "üñ± –ù–∞—Ç–∏—Å–Ω—É—Ç–∏ –∫–ª–∞–≤—ñ—à—É")
def request_key(message):
    if is_admin(message):
        bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –∫–ª–∞–≤—ñ—à—É –¥–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è:")
        bot.register_next_step_handler(message, press_key)

def press_key(message):
    if is_admin(message):
        pyautogui.press(message.text)
        bot.send_message(message.chat.id, f'üîò –ù–∞—Ç–∏—Å–Ω—É—Ç–∞ –∫–ª–∞–≤—ñ—à–∞: {message.text}')

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
bot.polling(none_stop=True)
